%appinstall epihiper_analysis
    $MAMBA_EXE create --yes --channel conda-forge --name epihiper_analysis python=3.11 &&
    $MAMBA_EXE run --name epihiper_analysis pip install \
      altair==5.1.1 \
      matplotlib==3.8.0 \
      numpy==1.26.0 \
      openpyxl==3.1.2 \
      pandas==2.1.1 \
      pytest==7.4.2 \
      pytest-cov==4.1.0
    REPO_NAME=EXCEADS-Analysis
    echo "using a token previously created at https://github.com/settings/tokens"
    cd lib
    git clone --depth=1 "https://$(cat /run/secrets/github_token)@github.com/NSSAC/${REPO_NAME}.git"

%appenv epihiper_analysis
    PYTHON="$MAMBA_EXE run --name epihiper_analysis python"
    export PYTHON

%appenv epihiper_replicate_analysis
    . $SCIF_APPENV_epihiper_analysis
    CMD="$PYTHON $SCIF_APPLIB_epihiper_analysis/EXCEADS-Analysis/repl_summary.py"
    export CMD

%apprun epihiper_replicate_analysis
    echo "Running $CMD $@"
    $CMD "$@"

%appenv epihiper_replicate_analysis_sciduct
    IN=/input/input
    [ -d /input/input ] && IN=/input/input/output.csv
    export IN

%apprun epihiper_replicate_analysis_sciduct
    echo "Running replicate analysis"
    $SCIF_APPRUN_epihiper_replicate_analysis \
      --EHO $IN \
      --outdir /output/ \
      --prefix=replicate_summary_

%appenv epihiper_cell_analysis
    . $SCIF_APPENV_epihiper_analysis
    CMD="$PYTHON $SCIF_APPLIB_epihiper_analysis/EXCEADS-Analysis/cell_summary.py"
    export CMD

%apprun epihiper_cell_analysis
    echo "Running $CMD $@"
    $CMD "$@"

%appenv epihiper_cell_analysis_sciduct
    DISEASE_MODEL=/input/.cell_related/diseaseModel
    [ -f /input/diseaseModel ] && DISEASE_MODEL=/input/diseaseModel
    export DISEASE_MODEL

%apprun epihiper_cell_analysis_sciduct
    echo "Running cell analysis"
    $SCIF_APPRUN_epihiper_cell_analysis  \
      --indir /input/cell/ \
      --disease_json $DISEASE_MODEL \
      --outdir /output/ \
      --prefix=cell_summary

%appenv epihiper_experiment_analysis
    . $SCIF_APPENV_epihiper_analysis
    CMD="$PYTHON $SCIF_APPLIB_epihiper_analysis/EXCEADS-Analysis/expt_summary.py"
    export CMD

@apprun epihiper_experiment_analysis
    echo "Running $CMD $@"
    $CMD "$@"

%appenv epihiper_experiment_analysis_sciduct
    META=""
    [ -f "/input/meta" ] && META="--cell_meta /input/meta"
    export META
    INPUT=/input/experiment/
    export INPUT
    DISEASE_MODEL=/input/.experiment_related/diseaseModel
    export DISEASE_MODEL

%apprun epihiper_experiment_analysis_sciduct
    echo "Running experiment analysis"
    $SCIF_APPRUN_epihiper_experiment_analysis \
      $META \
      --indir $INPUT \
      --outdir /output/ \
      --disease_json $DISEASE_MODEL \
      --prefix=experiment_

%appenv epihiper_multicell_analysis
    . $SCIF_APPENV_epihiper_experiment_analysis_analysis

@apprun epihiper_multicell_analysis
    echo "Running $CMD $@"
    $CMD "$@"

%appenv epihiper_multicell_analysis_sciduct
    . $SCIF_APPENV_epihiper_experiment_analysis_sciduct
    INPUT=/input/cells/
    export INPUT
    DISEASE_MODEL=/input/diseaseModel
    export DISEASE_MODEL

%apprun epihiper_multicell_analysis_sciduct
    echo "Running multicell experiment analysis"
    $SCIF_APPRUN_epihiper_experiment_analysis \
      $META \
      --indir $INPUT \
      --outdir /output/ \
      --disease_json $DISEASE_MODEL \
      --prefix=multicell_

%appinstall us_inflection_point_hosp
    $MAMBA_EXE create --yes --channel conda-forge --name us_inflection_point_hosp python=3.11 &&
    $MAMBA_EXE run --name us_inflection_point_hosp pip install \
      matplotlib==3.8.0 \
      numpy==1.26.0 \
      pandas==2.1.1 \
      scipy==1.11.2

    REPO_NAME=2019-nCoV_data_input
    echo "using a token previously created at https://github.com/settings/tokens"
    cd lib
    git clone --depth=1 --no-checkout "https://$(cat /run/secrets/github_token)@github.com/NSSAC/${REPO_NAME}.git"
    cd $REPO_NAME
    git show HEAD:US-InflectionPointAnalysis_hosp.py > US-InflectionPointAnalysis_hosp.py
    git show HEAD:misc_data/co-est2019-alldata.csv > ${SCIF_APPDATA}/co-est2019-alldata.csv
    git show HEAD:misc_data/stfips_to_state.csv > ${SCIF_APPDATA}/stfips_to_state.csv
    git show HEAD:misc_data/us_subplot_grid.csv > ${SCIF_APPDATA}/us_subplot_grid.csv

%appenv us_inflection_point_hosp
    ENV_NAME=us_inflection_point_hosp
    export ENV_NAME
    MAIN_SCRIPT=$SCIF_APPLIB_us_inflection_point_hosp/2019-nCoV_data_input/US-InflectionPointAnalysis_hosp.py
    export MAIN_SCRIPT

%apprun us_inflection_point_hosp
    $MAMBA_EXE run --name $ENV_NAME python $MAIN_SCRIPT $@

%appinstall sciduct
    BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%S.%NZ")
    cat /config.json | jq --arg build_date $BUILD_DATE '. + {build_date: $build_date}' > $SCIF_APPDATA/config.json &&
    rm /config.json

    echo "trying to validate the jobservice config against . . ."
    echo "https://github.com/NSSAC/sciduct_jobservice/blob/main/src/jobservice/schema/image_configuration.json"
    REPO_NAME=sciduct_jobservice
    echo "using a Github token previously created at https://github.com/settings/tokens"
    cd lib
    git clone --depth=1 --no-checkout "https://$(cat /run/secrets/github_token)@github.com/NSSAC/${REPO_NAME}.git"
    cd $REPO_NAME
    JOBSERVICE_SCHEMA=${SCIF_APPDATA}/image_configuration.json
    git show HEAD:src/jobservice/schema/image_configuration.json > $JOBSERVICE_SCHEMA
    # We could, actually, remove the repo at this point. But it should be minimal, with depth=1, and no checked out files.
    JSONSCHEMA="$MAMBA_EXE run --name base jsonschema"
    VALIDATE_CMD="$JSONSCHEMA -i $SCIF_APPDATA/config.json $JOBSERVICE_SCHEMA"
    echo "Running: $VALIDATE_CMD"
    eval $VALIDATE_CMD
    if [ $? -eq 0 ]; then
        echo "Generated Configuration appears to be valid"
    else
        echo "Generated Configuration failed validation"
        exit 1
    fi

%appenv sciduct
    CONFIG_JSON=$SCIF_APPDATA_sciduct/config.json
    export CONFIG_JSON
    VERSION=`cat $CONFIG_JSON | jq -r .version`
    export VERSION

%apprun sciduct
    cat $CONFIG_JSON

%appinstall us_inflection_point_hosp_sciduct
    mkdir -p $SCIF_APPDATA/input
    mkdir -p $SCIF_APPDATA/output
    mkdir -p $SCIF_APPDATA/job

%appenv us_inflection_point_hosp_sciduct
    JOB_JSON=$SCIF_APPDATA_us_inflection_point_hosp_sciduct/job/job.json
    export JOB_JSON

%apprun us_inflection_point_hosp_sciduct
    THRESHOLD=`cat $JOB_JSON | jq -r .input.threshold`
    UPPER=`cat $JOB_JSON | jq -r .input.upper`
    LOWER=`cat $JOB_JSON | jq -r .input.lower`
    AGE=`cat $JOB_JSON | jq -r .input.age`

    $SCIF_APPRUN_us_inflection_point_hosp \
        --hosp_data_path "$SCIF_APPDATA/input" \
        --fips_to_pop_file "$SCIF_DATA_us_inflection_point_hosp/co-est2019-alldata.csv" \
        --state_to_stfips_path "$SCIF_DATA_us_inflection_point_hosp/stfips_to_state.csv" \
        --us_subplot_grid_path "$SCIF_DATA_us_inflection_point_hosp/us_subplot_grid.csv" \
        --threshold $THRESHOLD \
        --upper $UPPER \
        --lower $LOWER \
        --age $AGE \
        --subdir ./ \
        --fig_dir "$SCIF_APPDATA/output" \
        --data_dir "$SCIF_APPDATA/output"